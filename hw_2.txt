1. Выяснить, для чего предназначена команда cat. 
__________________________________________________________________________________________
Команда используется для просмотра небольших файлов, а так же склеивания нескольких файлов
__________________________________________________________________________________________

Используя только данную команду, потоки ввода-вывода и их перенаправление:
- создайте два файла с данными, а затем объедините их в один.
___________________________________________________________________________________________
igor@ubuntu-virtual:~$ top -bn 1 > file1.log
igor@ubuntu-virtual:~$ top -bn 1 > file2.log
igor@ubuntu-virtual:~$ cat file1.log file2.log > file3.log
__________________________________________________________________________________________

- просмотрите содержимое созданного файла.
___________________________________________________________________________________________
igor@ubuntu-virtual:~$ cat file3.log
___________________________________________________________________________________________

- скопируйте файл, дав ему новое имя.
___________________________________________________________________________________________
igor@ubuntu-virtual:~$ cat file3.log > newfile.log
___________________________________________________________________________________________

2. В ОС Linux скрытыми файлами считаются те, имена которых начинаются с символа точки ..
Напишите команду, которая будет показывать количество скрытых файлов в домашнем каталоге пользователя.
При необходимости используйте конвейер (пайплайн).
Подсказка: для подсчета количества строк можно использовать wc).
Количество скрытых файлов во вложенных папках считать не нужно.
______________________________________________________________________________________________________
igor@ubuntu-virtual:~$ find -maxdepth 1 -type f -name ".*"  | wc -l
9
_______________________________________________________________________________________________________

3. Создаем свой веб калькулятор.
3.1 Используя команду curl загрузить и сохранить на Ubuntu скрипт по ссылке
https://raw.githubusercontent.com/mtuktarov/linux_goodies/master/docker/python/uwsgi/flaskapp.py
____________________________________________________________________________________________________________
sudo curl -O https://raw.githubusercontent.com/mtuktarov/linux_goodies/master/docker/python/uwsgi/flaskapp.py
_____________________________________________________________________________________________________________
3.2 Попытаться запустить скрипт, используя полный путь (абсолютный) или относительный (./<script_name>), 
добавив права на выполнение при необходимости
___________________________________________________________________________________________________________
igor@ubuntu-virtual:~$ sudo chmod ugo+rwx flaskapp.py  
___________________________________________________________________________________________________________

3.3 В Ubuntu по умолчанию нет python 2 и скрипт может не запуститься.
Решите эту проблемы, пользуясь материалами занятий.
____________________________________________________________________________________________________________
igor@ubuntu-virtual:~$ sudo apt install python2.7
____________________________________________________________________________________________________________
3.4 При необходимости установите отсутствующие модули, используя программу pip (помним, что при python3 - pip3),
которую, вероятно, придется тоже установить =)
_____________________________________________________________________________________________________________
igor@ubuntu-virtual:~$ curl https://bootstrap.pypa.io/get-pip.py --output get-pip.py
igor@ubuntu-virtual:~$ sudo python2 get-pip.py
igor@ubuntu-virtual:~$ pip2 --version
igor@ubuntu-virtual:~$ pip2 install flask
__________________________________________________________________________________________________________
3.5 Просмотрите код программы и найдите, какая переменная окружения используется для указания адреса,
на котором программа слушает входящие запросы. Поменяйте адрес по умолчанию на тот IP адрес ubuntu,
который доступен с хоста и убедитесь, что можете открыть программу со стороны хоста.
Код самой python программы менять не нужно
___________________________________________________________________________________________________________
igor@ubuntu-virtual:~$ FLASK_HOST=192.168.1.101
____________________________________________________________________________________________________________
3.6 Сделайте так, чтобы калькулятор можно было запустить из любого рабочего каталога командной строки,
используя одно только название. Настройка должна быть устойчива к перезагрузке.
______________________________________________________________________________________________________________

igor@ubuntu-virtual:~$ sudo nano /etc/environment

Добавляем путь и переменную окружения:
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/igor"
FLASK_HOST="192.168.1.101"

igor@ubuntu-virtual:~$ sourse /etc/environment

создаём ссылку:
igor@ubuntu-virtual:~$ ln -s /home/igor/flaskapp.py ~/flaskapp
igor@ubuntu-virtual:~$ flaskapp

 * Serving Flask app "flaskapp" (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: on
 * Running on http://192.168.1.101:5000/ (Press CTRL+C to quit)
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 256-945-731

в браузере в адресной строке http://192.168.1.101:5000/ 
вводим выражение нажимаем Calculate
в консоли получаем:
192.168.1.2 - - [05/Sep/2020 21:59:48] "GET / HTTP/1.1" 200 -
192.168.1.2 - - [05/Sep/2020 21:59:53] "POST / HTTP/1.1" 200 -

