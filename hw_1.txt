1. Создать репозиторий в GitHub

https://github.com/Shmanov/Linux

2. Установить Virtualbox, установить Ubuntu, сменить сеть на Мостовую, чтобы Виртуальная Машина оказалась в той же сети, где и хост.
---------------------------------------------------------------------------------------------------------------
На компьютере с опеарационной системой Windows 10,
установлен гипервизор Virtualbox.
В меню Virtualbox: Устройства -> Сеть -> Настроить сеть, выбираем Тип подключения "Виртуальный адаптер хоста"
командой ip a проверяем присвоенный dhcp ip адрес для гостевой ос(параметр "Сетевой мост" не сработал на моей машине). В моём случае это 192.168.56.101
-------------------------------------------------------------------------------------------------------------
3. Установить утилиты для гостевой ОС вручную и написать команды для
-- установка недостоющих зависимостей gcc, make, perl
-------------------------------------------------------------------------------------------------------------
Для установки недостающих зависимостей вводим команду: sudo apt install make gcc perl
-------------------------------------------------------------------------------------------------------------

4. В командной строке потестировать следующие команды. Иметь понимание, для чего они используются:
-------------------------------------------------------------------------------------------------------------
-- man - выводит руководство
-- cd - задаёт директорию в качестве текущей
-- ls - выводит содержание директории
-- hostname - выводит имя хоста
-- whoami - выводит имя текущего пользователя
-- pwd - выводит путь до рабочей директории
-- ip - выводит сетевую конфигурацию
-- sudo - повышение прав до root
-- reboot - перезагрузка системы или виртуальной машины
-- poweroff - отключение компьютера или виртуальной машины
-- apt или apt-get - команда для работы с пакетами например: установка, удаление, обновление
--------------------------------------------------------------------------------------------------------------
5. Настроить ssh соединение:
-- установить ssh сервер
----------------------------------------------------------------------------
для установки ssh сервера используем команду: sudo apt install openssh-server
------------------------------------------------------------------------------

-- пользуясь справкой man для штатного фаервола ufw разобраться, как включить фаерволл и добавить ssh порт TCP 22 в исключения
-------------------------------------------------------------------------------------------------------------
проверяем статус фаервола: sudo ufw status
запускаем если не активен: sudo ufw enable
открываем порт TCP 22: sudo ufw allow OpenSSH (можно sudo ufw allow 22/tcp)
В идеале для более бесопастного соединения по SSH протоколу лучше использовать другой порт.
---------------------------------------------------------------------------------------------------------------

-- самостоятельно найти информацию о том, как работает ssh подключение с помощью ключей и настроить его. 
Для этого сначала ответьте на наводящие вопросы - Что такое ssh-keygen? 

--------------------------------------------------------------------------------------------------------------
ssh-keygen - это утилита которая генерирует два ключа. Публичный для сервера и приватный для клиента.
--------------------------------------------------------------------------------------------------------------

Что такое приватная часть SSH ключа и как она используется? 

---------------------------------------------------------------------------------------------------------------
Приватная часть ключа всегда остаётся у клиента и никому никогда не показывается.
---------------------------------------------------------------------------------------------------------------

Что такое публичная часть SSH ключа и как она используется? 

---------------------------------------------------------------------------------------------------------------
Публичная часть ключа копируется на удалённый сервер.
---------------------------------------------------------------------------------------------------------------

Что такое authorized_keys? 

--------------------------------------------------------------------------------------------------------------------------
На сервере в специальной директории хранится файл authorized_keys в который помещается публичный ключ клиента. 
Используется для безопастного безпарольного (если не использовать пароль для приватного ключа)  подключения к SSH серверу.
--------------------------------------------------------------------------------------------------------------------------

Как указать ssh клиенту нужный ключ при подключении?

----------------------------------------------------------------------------------------------------------
В моём случае команда выглядит так: ssh -i C:\Users\Игорь.000\.ssh\id_rsa igor@192.168.56.101
----------------------------------------------------------------------------------------------------------

Ход выполнения:
__________________________________________________________________________________________________________
1.Генерируем ключи: ssh-keygen
2.Создаём директорию и файл authorized_keys на ВМ:
	igor@ubuntu-virtual:~$ cd /home/igor
	igor@ubuntu-virtual:~$ mkdir .ssh
	igor@ubuntu-virtual:~$ chmod 0700 ~/.ssh
	igor@ubuntu-virtual:~$ nano .ssh/authorized_keys или igor@ubuntu-virtual:~$ touch ~/.ssh/authorized_keys 
	igor@ubuntu-virtual:~$ chmod 0644 ~/.ssh/authorized_keys
	igor@ubuntu-virtual:~$ sudo service ssh restart

3. Выполняем на клиенте следующую команду для копирования публичного ключа в файл:
scp C:\Users\Игорь.000\.ssh\id_rsa.pub igor@192.168.56.101:/home/igor/.ssh/authorized_keys      

4.Подключаемся: ssh igor@192.168.56.101
_______________________________________________________________________________________________________________



6. * https://github.com/mtuktarov/linux_stuff/blob/master/lecture1-hw.MD
Примечание. Задания 6 дано для тех, кому упражнений 1-5 показалось недостаточно.